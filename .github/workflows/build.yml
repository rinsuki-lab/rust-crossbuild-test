name: Build
on:
  pull_request:
  push:
    branches:
    - master

jobs:
  build:
    strategy:
      matrix:
        binname:
          - rust-crossbuild-test
        name:
          - windows.x86
          - windows.x86_64
          - linux.x86_64
          - macos.universal2
        include:
          - name: windows.x86
            os: windows-latest
            target: i686-pc-windows-msvc
            extension: .exe
          - name: windows.x86_64
            os: windows-latest
            target: x86_64-pc-windows-msvc
            extension: .exe
          - name: linux.x86_64
            os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - name: macos.universal2
            os: macOS-latest
            target: aarch64-apple-darwin
            target-sub: x86_64-apple-darwin
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@master
    - uses: actions/cache@v2
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
        key: v1-${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    - name: Setup macOS Build environment
      run: |
        sudo xcode-select --switch /Applications/Xcode_12.4.app
        sudo rm -rf /Library/Developer/CommandLineTools
      if: matrix.name == 'macos.universal2'
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        target: ${{ matrix.target }}
    - run: cargo build --release --target ${{ matrix.target }}
    - run: cargo build --release --target ${{ matrix.target-sub }}
      if: matrix.target-sub != ''
    - name: Create Universal Binary
      run: lipo -create target/${{ matrix.target }}/release/${{ matrix.binname }} target/${{ matrix.target-sub }}/release/${{ matrix.binname }} -output target/${{ matrix.target }}/release/${{ matrix.binname }}.${{ matrix.name }} 
      if: matrix.target-sub != '' && matrix.os == 'macOS-latest'
    - run: cp target/${{ matrix.target }}/release/${{ matrix.binname }}${{ matrix.extension }} target/${{ matrix.target }}/release/${{ matrix.binname }}.${{ matrix.name }}${{ matrix.extension }}
    - uses: actions/upload-artifact@v2
      with:
        name: ${{ matrix.name }}
        path: target/${{ matrix.target }}/release/${{ matrix.binname }}.${{ matrix.name }}${{ matrix.extension }}